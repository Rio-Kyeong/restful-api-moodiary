// QueryDSL : 플러그인 디펜던시
buildscript {
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'

	id "io.franzbecker.gradle-lombok" version "3.0.0"
}

group = 'com.rest'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

// QueryDSL : 외부 플러그인 적용
apply plugin: "com.ewerk.gradle.plugins.querydsl"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	// JSON 을 다루는 라이브러리
	// 미 추가 시 프론트단에서 415 Unsupported Media Type 상태코드가 발생할 수 있다.
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// JWT Library
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	// QueryDSL : querydsl
	implementation 'com.querydsl:querydsl-jpa'
	// QueryDSL : Qclass 생성
	implementation 'com.querydsl:querydsl-apt'

	// HATEOAS
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
}

// QueryDSL : 플러그인 설정
def querydslDir = "$buildDir/generated/querydsl" // Qclass 생성 위치

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

// QueryDSL : QClass 소스 위치 지정
sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}

// QueryDSL : gradle 5.0 설정
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	querydsl.extendsFrom compileClasspath
}

// 빌드할 떄마다 compileQuerydsl 작업 전에 generated/querydsl package를 삭제하고, 다시 컴파일해서 생성
// QClass Cannot find symbol Error 발생 시 적용
compileQuerydsl.doFirst {
	if(file(querydslDir).exists() )
		delete(file(querydslDir))
}

test {
	useJUnitPlatform()
}